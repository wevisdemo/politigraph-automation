name: Crop & Update Images

on:
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write' # Required for OIDC authentication

jobs:
  crop-and-update-images:
    runs-on: ubuntu-latest

    env:
      MODE: "dev"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Setup

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.WORKLOAD_IDP }}"
          service_account: "${{ secrets.SERVICE_ACCOUNT }}"

      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y poppler-utils libpoppler-cpp-dev
            curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Create temporary directory
        run: |
            mkdir -p /tmp

      - name: Crop & Update Images
        run: uv run scripts/crop_and_update_images.py
        env:
          POLITICIAN_PHOTOS_DRIVE_FOLDER_ID: "${{ secrets.POLITICIAN_PHOTOS_DRIVE_FOLDER_ID }}" # Google Drive folder id for Politician images
          PARTY_LOGOS_DRIVE_FOLDER_ID: "${{ secrets.PARTY_LOGOS_DRIVE_FOLDER_ID }}" # Google Drive folder id for Party logos
          POLITIGRAPH_SUBSCRIBTION_ENDPOINT: "${{ secrets.POLITIGRAPH_SUBSCRIBTION_ENDPOINT }}"
          POLITIGRAPH_TOKEN: "${{ secrets.POLITIGRAPH_TOKEN }}"

      - name: Upload politician images
        uses: burnett01/rsync-deployments@7.0.1
        with:
            switches: -azvP --chown=bot:deployer --chmod=g+w
            path: tmp/cropped-politician-images/
            remote_host: ${{ secrets.SSH_HOST }}
            remote_user: bot
            remote_key: ${{ secrets.SSH_KEY }}
            remote_path: ${{ secrets.SSH_ASSETS_PATH }}/people/